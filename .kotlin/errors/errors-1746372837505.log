kotlin version: 2.1.0
error message: Incremental compilation failed: The following FqNames can't be derived from DirtyData.dirtyLookupSymbols: kotlinx.coroutines.flow.SharingStarted.
DirtyData = DirtyData(dirtyLookupSymbols=[LookupSymbol(name=coroutineScope, scope=kotlinx.coroutines), LookupSymbol(name=FlowCollector, scope=kotlinx.coroutines.flow), LookupSymbol(name=BuildersKt__Builders_commonKt, scope=kotlinx.coroutines), LookupSymbol(name=cancel, scope=kotlinx.coroutines), LookupSymbol(name=isActive, scope=kotlinx.coroutines), LookupSymbol(name=plus, scope=kotlinx.coroutines), LookupSymbol(name=cancelAndJoin, scope=kotlinx.coroutines), LookupSymbol(name=asSharedFlow, scope=kotlinx.coroutines.flow), LookupSymbol(name=currentCoroutineContext, scope=kotlinx.coroutines), LookupSymbol(name=<SAM-CONSTRUCTOR>, scope=io.shubham0204.text2summary.Text2Summary.Companion), LookupSymbol(name=shareIn, scope=kotlinx.coroutines.flow), LookupSymbol(name=StateFlow, scope=kotlinx.coroutines.flow), LookupSymbol(name=Eagerly, scope=kotlinx.coroutines.flow.SharingStarted.Companion), LookupSymbol(name=Companion, scope=kotlinx.coroutines.flow.SharingStarted), LookupSymbol(name=<SAM-CONSTRUCTOR>, scope=kotlinx.coroutines.flow.SharingStarted), LookupSymbol(name=cancelChildren, scope=kotlinx.coroutines), LookupSymbol(name=FlowKt__ShareKt, scope=kotlinx.coroutines.flow), LookupSymbol(name=<SAM-CONSTRUCTOR>, scope=kotlinx.coroutines.flow), LookupSymbol(name=MainScope, scope=kotlinx.coroutines), LookupSymbol(name=ensureActive, scope=kotlinx.coroutines), LookupSymbol(name=CoroutineScope, scope=kotlinx.coroutines), LookupSymbol(name=CoroutineScopeKt, scope=kotlinx.coroutines), LookupSymbol(name=launch, scope=kotlinx.coroutines), LookupSymbol(name=stateIn, scope=kotlinx.coroutines.flow), LookupSymbol(name=Job, scope=kotlinx.coroutines), LookupSymbol(name=WhileSubscribed, scope=kotlinx.coroutines.flow.SharingStarted.Companion), LookupSymbol(name=CoroutineDispatcher, scope=kotlinx.coroutines), LookupSymbol(name=Job0, scope=kotlinx.coroutines), LookupSymbol(name=onSubscription, scope=kotlinx.coroutines.flow), LookupSymbol(name=MainCoroutineDispatcher, scope=kotlinx.coroutines), LookupSymbol(name=invokeOnCompletion, scope=kotlinx.coroutines), LookupSymbol(name=SharedFlow, scope=kotlinx.coroutines.flow), LookupSymbol(name=JobKt__JobKt, scope=kotlinx.coroutines), LookupSymbol(name=invoke, scope=kotlinx.coroutines), LookupSymbol(name=job, scope=kotlinx.coroutines), LookupSymbol(name=async, scope=kotlinx.coroutines), LookupSymbol(name=asStateFlow, scope=kotlinx.coroutines.flow), LookupSymbol(name=Text2Summary, scope=io.shubham0204.text2summary), LookupSymbol(name=<SAM-CONSTRUCTOR>, scope=kotlinx.coroutines), LookupSymbol(name=Lazily, scope=kotlinx.coroutines.flow.SharingStarted.Companion), LookupSymbol(name=Flow, scope=kotlinx.coroutines.flow), LookupSymbol(name=<SAM-CONSTRUCTOR>, scope=kotlinx.coroutines.flow.SharingStarted.Companion), LookupSymbol(name=withContext, scope=kotlinx.coroutines), LookupSymbol(name=<SAM-CONSTRUCTOR>, scope=io.shubham0204.text2summary.Text2Summary), LookupSymbol(name=Dispatchers, scope=kotlinx.coroutines), LookupSymbol(name=disposeOnCompletion, scope=kotlinx.coroutines), LookupSymbol(name=Companion, scope=io.shubham0204.text2summary.Text2Summary), LookupSymbol(name=summarize, scope=io.shubham0204.text2summary.Text2Summary.Companion)], dirtyClassesFqNames=[kotlinx.coroutines, kotlinx.coroutines.flow.SharingStarted, io.shubham0204.text2summary.Text2Summary, kotlinx.coroutines.flow.FlowKt__ShareKt, kotlinx.coroutines.Job, kotlinx.coroutines.MainCoroutineDispatcher, kotlinx.coroutines.flow, io.shubham0204.text2summary.Text2Summary.Companion, kotlinx.coroutines.Dispatchers, kotlinx.coroutines.CoroutineDispatcher, kotlinx.coroutines.BuildersKt__Builders_commonKt, kotlinx.coroutines.flow.SharedFlow, kotlinx.coroutines.flow.Flow, kotlinx.coroutines.flow.FlowCollector, kotlinx.coroutines.CoroutineScopeKt, kotlinx.coroutines.JobKt__JobKt, kotlinx.coroutines.flow.SharingStarted.Companion, kotlinx.coroutines.flow.StateFlow], dirtyClassesFqNamesForceRecompile=[])
java.lang.IllegalStateException: The following FqNames can't be derived from DirtyData.dirtyLookupSymbols: kotlinx.coroutines.flow.SharingStarted.
DirtyData = DirtyData(dirtyLookupSymbols=[LookupSymbol(name=coroutineScope, scope=kotlinx.coroutines), LookupSymbol(name=FlowCollector, scope=kotlinx.coroutines.flow), LookupSymbol(name=BuildersKt__Builders_commonKt, scope=kotlinx.coroutines), LookupSymbol(name=cancel, scope=kotlinx.coroutines), LookupSymbol(name=isActive, scope=kotlinx.coroutines), LookupSymbol(name=plus, scope=kotlinx.coroutines), LookupSymbol(name=cancelAndJoin, scope=kotlinx.coroutines), LookupSymbol(name=asSharedFlow, scope=kotlinx.coroutines.flow), LookupSymbol(name=currentCoroutineContext, scope=kotlinx.coroutines), LookupSymbol(name=<SAM-CONSTRUCTOR>, scope=io.shubham0204.text2summary.Text2Summary.Companion), LookupSymbol(name=shareIn, scope=kotlinx.coroutines.flow), LookupSymbol(name=StateFlow, scope=kotlinx.coroutines.flow), LookupSymbol(name=Eagerly, scope=kotlinx.coroutines.flow.SharingStarted.Companion), LookupSymbol(name=Companion, scope=kotlinx.coroutines.flow.SharingStarted), LookupSymbol(name=<SAM-CONSTRUCTOR>, scope=kotlinx.coroutines.flow.SharingStarted), LookupSymbol(name=cancelChildren, scope=kotlinx.coroutines), LookupSymbol(name=FlowKt__ShareKt, scope=kotlinx.coroutines.flow), LookupSymbol(name=<SAM-CONSTRUCTOR>, scope=kotlinx.coroutines.flow), LookupSymbol(name=MainScope, scope=kotlinx.coroutines), LookupSymbol(name=ensureActive, scope=kotlinx.coroutines), LookupSymbol(name=CoroutineScope, scope=kotlinx.coroutines), LookupSymbol(name=CoroutineScopeKt, scope=kotlinx.coroutines), LookupSymbol(name=launch, scope=kotlinx.coroutines), LookupSymbol(name=stateIn, scope=kotlinx.coroutines.flow), LookupSymbol(name=Job, scope=kotlinx.coroutines), LookupSymbol(name=WhileSubscribed, scope=kotlinx.coroutines.flow.SharingStarted.Companion), LookupSymbol(name=CoroutineDispatcher, scope=kotlinx.coroutines), LookupSymbol(name=Job0, scope=kotlinx.coroutines), LookupSymbol(name=onSubscription, scope=kotlinx.coroutines.flow), LookupSymbol(name=MainCoroutineDispatcher, scope=kotlinx.coroutines), LookupSymbol(name=invokeOnCompletion, scope=kotlinx.coroutines), LookupSymbol(name=SharedFlow, scope=kotlinx.coroutines.flow), LookupSymbol(name=JobKt__JobKt, scope=kotlinx.coroutines), LookupSymbol(name=invoke, scope=kotlinx.coroutines), LookupSymbol(name=job, scope=kotlinx.coroutines), LookupSymbol(name=async, scope=kotlinx.coroutines), LookupSymbol(name=asStateFlow, scope=kotlinx.coroutines.flow), LookupSymbol(name=Text2Summary, scope=io.shubham0204.text2summary), LookupSymbol(name=<SAM-CONSTRUCTOR>, scope=kotlinx.coroutines), LookupSymbol(name=Lazily, scope=kotlinx.coroutines.flow.SharingStarted.Companion), LookupSymbol(name=Flow, scope=kotlinx.coroutines.flow), LookupSymbol(name=<SAM-CONSTRUCTOR>, scope=kotlinx.coroutines.flow.SharingStarted.Companion), LookupSymbol(name=withContext, scope=kotlinx.coroutines), LookupSymbol(name=<SAM-CONSTRUCTOR>, scope=io.shubham0204.text2summary.Text2Summary), LookupSymbol(name=Dispatchers, scope=kotlinx.coroutines), LookupSymbol(name=disposeOnCompletion, scope=kotlinx.coroutines), LookupSymbol(name=Companion, scope=io.shubham0204.text2summary.Text2Summary), LookupSymbol(name=summarize, scope=io.shubham0204.text2summary.Text2Summary.Companion)], dirtyClassesFqNames=[kotlinx.coroutines, kotlinx.coroutines.flow.SharingStarted, io.shubham0204.text2summary.Text2Summary, kotlinx.coroutines.flow.FlowKt__ShareKt, kotlinx.coroutines.Job, kotlinx.coroutines.MainCoroutineDispatcher, kotlinx.coroutines.flow, io.shubham0204.text2summary.Text2Summary.Companion, kotlinx.coroutines.Dispatchers, kotlinx.coroutines.CoroutineDispatcher, kotlinx.coroutines.BuildersKt__Builders_commonKt, kotlinx.coroutines.flow.SharedFlow, kotlinx.coroutines.flow.Flow, kotlinx.coroutines.flow.FlowCollector, kotlinx.coroutines.CoroutineScopeKt, kotlinx.coroutines.JobKt__JobKt, kotlinx.coroutines.flow.SharingStarted.Companion, kotlinx.coroutines.flow.StateFlow], dirtyClassesFqNamesForceRecompile=[])
	at org.jetbrains.kotlin.incremental.classpathDiff.ClasspathChangesComputer.toProgramSymbols(ClasspathChangesComputer.kt:381)
	at org.jetbrains.kotlin.incremental.classpathDiff.ClasspathChangesComputer.computeFineGrainedKotlinClassChanges(ClasspathChangesComputer.kt:281)
	at org.jetbrains.kotlin.incremental.classpathDiff.ClasspathChangesComputer.computeKotlinClassChanges(ClasspathChangesComputer.kt:181)
	at org.jetbrains.kotlin.incremental.classpathDiff.ClasspathChangesComputer.computeClassChanges(ClasspathChangesComputer.kt:154)
	at org.jetbrains.kotlin.incremental.classpathDiff.ClasspathChangesComputer.computeChangedAndImpactedSet(ClasspathChangesComputer.kt:104)
	at org.jetbrains.kotlin.incremental.classpathDiff.ClasspathChangesComputer.computeClasspathChanges(ClasspathChangesComputer.kt:72)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.calculateSourcesToCompileImpl(IncrementalJvmCompilerRunner.kt:205)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.calculateSourcesToCompile(IncrementalJvmCompilerRunner.kt:143)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.calculateSourcesToCompile(IncrementalJvmCompilerRunner.kt:73)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.tryCompileIncrementally$lambda$9$compile(IncrementalCompilerRunner.kt:225)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.tryCompileIncrementally(IncrementalCompilerRunner.kt:267)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compile(IncrementalCompilerRunner.kt:120)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.execIncrementalCompiler(CompileServiceImpl.kt:674)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.access$execIncrementalCompiler(CompileServiceImpl.kt:91)
	at org.jetbrains.kotlin.daemon.CompileServiceImpl.compile(CompileServiceImpl.kt:1659)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)


